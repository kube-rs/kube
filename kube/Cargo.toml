[package]
name = "kube"
version = "0.88.1"
description = "Kubernetes client and async controller runtime"
authors = [
  "clux <sszynrae@gmail.com>",
  "Natalie Klestrup RÃ¶ijezon <nat@nullable.se>",
  "kazk <kazk.dev@gmail.com>",
]
license = "Apache-2.0"
repository = "https://github.com/kube-rs/kube"
readme = "../README.md"
keywords = ["kubernetes", "client", "runtime", "cncf"]
categories = ["network-programming", "caching", "api-bindings", "configuration", "encoding"]
rust-version = "1.75.0"
edition = "2021"

[features]
default = ["client", "rustls-tls"]

# default features
client = ["kube-client/client", "config"]
config = ["kube-client/config"]
rustls-tls = ["kube-client/rustls-tls"]

# alternative features
openssl-tls = ["kube-client/openssl-tls"]

# auxiliary features
ws = ["kube-client/ws", "kube-core/ws"]
kubelet-debug = ["kube-client/kubelet-debug", "kube-core/kubelet-debug"]
oauth = ["kube-client/oauth"]
oidc = ["kube-client/oidc"]
gzip = ["kube-client/gzip"]
jsonpatch = ["kube-core/jsonpatch"]
admission = ["kube-core/admission"]
derive = ["kube-derive", "kube-core/schema"]
runtime = ["kube-runtime"]
unstable-runtime = ["kube-runtime/unstable-runtime"]
unstable-client = ["kube-client/unstable-client"]
socks5 = ["kube-client/socks5"]

[package.metadata.docs.rs]
features = ["client", "rustls-tls", "openssl-tls", "derive", "ws", "oauth", "jsonpatch", "admission", "runtime", "k8s-openapi/latest", "unstable-runtime", "socks5"]
# Define the configuration attribute `docsrs`. Used to enable `doc_cfg` feature.
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
kube-derive = { path = "../kube-derive", version = "=0.88.1", optional = true }
kube-core = { path = "../kube-core", version = "=0.88.1" }
kube-client = { path = "../kube-client", version = "=0.88.1", default-features = false, optional = true }
kube-runtime = { path = "../kube-runtime", version = "=0.88.1", optional = true}
# Not used directly, but required by resolver 2.0 to ensure that the k8s-openapi dependency
# is considered part of the "deps" graph rather than just the "dev-deps" graph
k8s-openapi.workspace = true

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
futures.workspace = true
serde_json.workspace = true
serde = { workspace = true, features = ["derive"] }
schemars.workspace = true
http.workspace = true
tower-test.workspace = true
anyhow.workspace = true
k8s-openapi = { workspace = true, features = ["latest"] }
